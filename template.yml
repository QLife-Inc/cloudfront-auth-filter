# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: AWS Lambda@Edge function for authentication and authorization with Amazon CloudFront.

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  FunctionName:
    Description: Lambda function name
    Type: String
    Default: CloudFrontAuthFilter
  AuthFileS3BucketName:
    Description: S3 bucket name where the authentication file is stored
    Type: String
  AuthFileS3BucketPrefix:
    Description: S3 bucket prefix where the authentication file is stored
    Type: String

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # Create role manually because edgelambda.amazonaws.com is required
  CloudFrontAuthFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${FunctionName}-role"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - edgelambda.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: GetAuthFilePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:ListBucket
                Resource: !Sub "arn:aws:s3:::${AuthFileS3BucketName}"
                Condition:
                  StringLike: { s3:prefix: [ !Sub "${AuthFileS3BucketPrefix}*" ] }
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub "arn:aws:s3:::${AuthFileS3BucketName}/${AuthFileS3BucketPrefix}*"

  CloudFrontAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref FunctionName
      CodeUri: dist/
      Handler: main.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 128 # Only 128 MB allowed for Lambda@Edge
      Timeout: 5 # Cannot be greater than 5 seconds for Lambda@Edge
      Description: AWS Lambda@Edge function for authentication and authorization with Amazon CloudFront.
      AutoPublishAlias: prod
      Role: !GetAtt CloudFrontAuthFunctionRole.Arn

Outputs:
  FunctionArn:
    Value: !GetAtt CloudFrontAuthFunction.Arn
    Export:
      Name: !Sub "${FunctionName}Arn"
