# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: AWS Lambda@Edge function for authentication and authorization with Amazon CloudFront.

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  FunctionName:
    Description: Lambda function name
    Type: String
    Default: CloudFrontAuthFilter
  AuthFileS3BucketName:
    Description: S3 bucket name where the authentication file is stored
    Type: String
  AuthFileS3BucketPrefix:
    Description: S3 bucket prefix where the authentication file is stored
    Type: String
  LogRetensionInDays:
    Description: Retension in days for CloudWatch Logs
    Type: Number
    Default: 7

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  CloudFrontAuthFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - FunctionLogGroup
    Properties:
      FunctionName: !Ref FunctionName
      CodeUri: dist/
      Handler: main.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 256
      Timeout: 10
      Publish: true
      Description: AWS Lambda@Edge function for authentication and authorization with Amazon CloudFront.
      AutoPublishAlias: prod
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
          - Effect: Allow
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${AuthFileS3BucketName}/${AuthFileS3BucketPrefix}*"

  FunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${FunctionName}"
      RetentionInDays: !Ref LogRetensionInDays

Outputs:
  FunctionQualifiedArn:
    Value: !Sub
      - "${Arn}:${Version}"
      - Arn: !GetAtt CloudFrontAuthFunction.Arn
        Version: !GetAtt CloudFrontAuthFunction.Version
    Export:
      Name: !Sub "${FunctionName}QualifiedArn"
